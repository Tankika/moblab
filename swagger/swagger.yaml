# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Cards API
  version: "1.0.0"
# the domain of the service
host: localhost
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /card:
    get:
      summary: Cards
      description: |
        Returns all cards from the system.
      tags:
        - Cards
      responses:
        200:
          description: An array of cards
          schema:
            type: array
            items:
              $ref: '#/definitions/Card'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /card/{id}:
    get:
      summary: Card
      description: |
        Returns a single card from the system.
      tags:
        - Cards
      parameters: 
        - name: id
          in: path
          description: Id of the card to fetch
          required: true
          type: number
          format: double
      responses:
        200:
          description: A card with the requested id
          schema:
            $ref: '#/definitions/Card'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Card
      description: |
        Updates a card in the system.
      tags:
        - Cards
      parameters: 
        - name: id
          in: path
          description: Id of the card to update
          required: true
          type: number
          format: double
        - name: card
          in: body
          description: Card object to update in the system
          required: true
          schema:
            $ref: '#/definitions/Card'
      responses:
        200:
          description: Empty response, success represented with return code
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Card
      description: |
        Removes a card from the system.
      tags:
        - Cards
      parameters: 
        - name: id
          in: path
          description: Id of the card to delete
          required: true
          type: number
          format: double
      responses:
        200:
          description: Empty response, success represented with return code
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Card:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
      description:
        type: string
        description: Description of product.
      display_name:
        type: string
        description: Display name of product.
      capacity:
        type: string
        description: Capacity of product. For example, 4 people.
      image:
        type: string
        description: Image URL representing the product.
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
